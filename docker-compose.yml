version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: expense-manager-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: expense_manager
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - expense-manager-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: expense-manager-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - expense-manager-network

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: expense-manager-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/expense_manager?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-for-development-only
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-for-development-only
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-nextauth-secret-for-development-only
    depends_on:
      - mongodb
      - redis
    networks:
      - expense-manager-network
    volumes:
      - ./uploads:/app/uploads

  # Nginx Reverse Proxy (optional for production)
  nginx:
    image: nginx:alpine
    container_name: expense-manager-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - expense-manager-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  expense-manager-network:
    driver: bridge